#!/bin/bash

set -e
set -o nounset

root="$(cd "$(dirname "$0")"; pwd -P)"
cd "${root}"

main() {
  set_up_data_partition
  set_up_dev_partition
  set_up_docker_dir

  sudo apt-get install -y apt-transport-https

  for f in *.key; do sudo apt-key add $f; done
  sudo cp -v *.list /etc/apt/sources.list.d
}

set_up_data_partition() {
  set_up_partition /data /dev/sda 2
}

set_up_dev_partition() {
  set_up_partition /opt/src /dev/sdc 1
  sudo chown spraints /opt/src
}

set_up_partition() {
  local DIR="$1"
  local DISK="$2"
  local PARTNUM="$3"
  local PART="${DISK}${PARTNUM}"

  if [ -d $DIR ]; then
    echo "$DIR already exists, cowardly refusing to set it up again."
    return
  fi
  if lsblk $PART 2>/dev/null; then
    echo "$PART already exists, cowardly refusing to set it up again."
  else
    printf '%s\n' \
      'n' \
      'p' \
      "${PARTNUM}" \
      '' \
      '' \
      'w' \
      | sudo fdisk $DISK || true # it always exits non-0
    sudo partprobe
    sudo mkfs.ext4 $PART
  fi
  local UUID="$(lsblk -n -o UUID $PART)"
  while [ -z "$UUID" ]; do
    sleep 1
    UUID="$(lsblk -n -o UUID $PART)"
  done
  sudo bash -c "echo 'UUID=$UUID    $DIR    ext4  defaults  0  2' >> /etc/fstab"
  sudo mkdir -p $DIR
  sudo mount $DIR
}

set_up_docker_dir() {
  if [ -e /var/lib/docker ]; then
    echo "/var/lib/docker exists, cowardly refusing to set it up again."
    return
  fi
  sudo mkdir -p /data/docker
  sudo chmod 711 /data/docker
  sudo ln -s /data/docker /var/lib/docker
}

main
