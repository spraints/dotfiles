#!/bin/bash
# Inspired by https://github.com/MikeMcQuaid/strap/blob/26e9607097601a617a0cf4b263d72b4102a129b7/bin/strap.sh

set -e
set -o nounset

main() {
  [ "$USER" = "root" ] && abort "Run this as yourself, not root."
  groups | grep -q -E "\b(admin)\b" || abort "Add $USER to the admin group."

  # Prevent sleeping.
  caffeinate -s -w $$ &

  # Skip full-disk encryption, work laptop already has this configured, and I
  # can enable it for my personal computer manually when I'm ready (and so I
  # can store the recovery key in my password manager.

  # Skip Xcode Command Line Tools. I've probably already installed this in
  # order to clone this repo.

  # Skip configuring Git, my other dotfiles take care of this.

  set_up_homebrew
}

# See also
# https://github.com/MikeMcQuaid/strap/blob/26e9607097601a617a0cf4b263d72b4102a129b7/bin/strap.sh#L330-L375
set_up_homebrew() {
  step "Installing homebrew."

  local HOMEBREW_PREFIX="$(brew --prefix 2>/dev/null || true)"
  local HOMEBREW_REPOSITORY="$(brew --repository 2>/dev/null || true)"
  if [ -z "$HOMEBREW_PREFIX" ] || [ -z "$HOMEBREW_REPOSITORY" ]; then
    local UNAME_MACHINE="$(/usr/bin/uname -m)"
    if [[ $UNAME_MACHINE == "arm64" ]]; then
      local HOMEBREW_PREFIX="/opt/homebrew"
      local HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}"
    else
      local HOMEBREW_PREFIX="/usr/local"
      local HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}/Homebrew"
    fi
  fi
  [ -d "$HOMEBREW_PREFIX" ] || sudo mkdir -p "$HOMEBREW_PREFIX"
  if [ "$HOMEBREW_PREFIX" = "/usr/local" ]; then
    sudo chown "root:wheel" "$HOMEBREW_PREFIX" 2>/dev/null || true
  fi
  (
    cd "$HOMEBREW_PREFIX"
    sudo mkdir -p            Cellar Caskroom Frameworks bin etc include lib opt sbin share var
    sudo chown "$USER:admin" Cellar Caskroom Frameworks bin etc include lib opt sbin share var
  )

  [ -d "$HOMEBREW_REPOSITORY" ] || sudo mkdir -p "$HOMEBREW_REPOSITORY"
  sudo chown -R "$USER:admin" "$HOMEBREW_REPOSITORY"

  if [ $HOMEBREW_PREFIX != $HOMEBREW_REPOSITORY ]; then
    ln -sf "$HOMEBREW_REPOSITORY/bin/brew" "$HOMEBREW_PREFIX/bin/brew"
  fi

  # Download Homebrew.
  (
    export GIT_DIR="$HOMEBREW_REPOSITORY/.git" GIT_WORK_TREE="$HOMEBREW_REPOSITORY"
    git init -q
    git config remote.origin.url "https://github.com/Homebrew/brew"
    git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
    git fetch -q --tags --force
    git reset -q --hard origin/master
  )

  # Update Homebrew.
  (
    export PATH="$HOMEBREW_PREFIX/bin:$PATH"
    step "Updating Homebrew."
    brew update --quiet
  )
}

step() {
  printf -- '--> %s\n' "$*"
}

abort() {
  printf '!!! %s\n' "$*" >&2
  exit 1
}

main
