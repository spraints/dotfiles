# bashrc is executed by bash for non-login shells.

# When installing on a new system, if .bashrc already exists and you want
# to keep it, `mv ~/.bashrc ~/.bashrc-defaults`.
test -f ~/.bashrc-defaults && . ~/.bashrc-defaults

. ~/.commonrc

for fun in ~/.shell-functions/*; do
  . $fun
done

PS1='[$$] '$(hostname | cut -d . -f 1)' \[\e[33;1m\]\t \[\e[0m\](\[\e[35;1m\]\j\[\e[0m\])$(parse_git_branch)$(audible_ps1) >>> '
PROMPT_COMMAND='prozac'

shuf_args() {
  for arg in "$@"; do
    echo $(rand2) "$arg"
  done | sort | cut -c 5- | tr "\n" " "
}

rand2() {
  dd if=/dev/random of=/dev/stdout bs=2 count=1 2>/dev/null | od -t x2  | head -1 | awk '{print $2}'
}

a() {
  local g=~/github/"$1"
  local d=~/dev/"$1"
  if [ -d "$g" ]
  then
    atom "$g"
  else
    if [ -d "$d" ]
    then
      atom "$d"
    else
      atom "$1"
    fi
  fi
}

# Run a console
sc() {
  if [ -e bin/console ]; then
    bin/console "$@"
  elif [ -e script/console ]; then
    script/console "$@"
  elif [ -e bin/rails ]; then
    bin/rails console "$@"
  else
    echo "Sorry, I don't know how to run a console here. :("
  fi
}

# Fail-fast test
fft() {
  if [ -e "script/fail-fast-test" ]; then
    script/fail-fast-test "$@"
  elif [ -e bin/rspec && -d spec ]; then
    bin/rspec --fail-fast "$@"
  else
    echo "Sorry, I don't know how to run a console here. :("
  fi
}

PERL_MB_OPT="--install_base \"/Users/spraints/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/spraints/perl5"; export PERL_MM_OPT;
