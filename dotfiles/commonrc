if [ -f /opt/github/env.sh ]
then
  source /opt/github/env.sh
fi

export PATH=/usr/local/bin:$PATH
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:${HOME}/.cabal/bin
export PATH=$PATH:${HOME}/dev/private/localbin
export PATH=$PATH:${HOME}/.local/bin
export PATH=$PATH:${HOME}/go/bin

which rbenv >/dev/null 2>/dev/null &&
  eval "$(rbenv init -)"

which nodenv >/dev/null 2>/dev/null &&
  eval "$(nodenv init -)"

[[ -s "$HOME/.gcloud/env.sh" ]] && source "$HOME/.gcloud/env.sh"

[[ -s "$HOME/.nvm/nvm.sh" ]] && source "$HOME/.nvm/nvm.sh"

[[ -s "$HOME/dev/na/na.sh" ]] && source "$HOME/dev/na/na.sh"

export RUBY_BUILD_DEFINITIONS=${HOME}/dev/puppet-ruby/files/definitions

export JAVA_MEM=-Xmx2g

export BCDATABASE_PATH=${HOME}/.nubic/db

export USE_CAPYBARA_WEBKIT=true
alias b='bundle exec'
alias slurp='gstash && git pull && gstash pop'

#export EDITOR=/usr/local/bin/mvim
export EDITOR=/usr/bin/vim
export GIT_EDITOR=/usr/bin/vim

# For AWS:
if [ -d /usr/local/Cellar/ec2-api-tools/1.5.0.1/jars ]
then
  export JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Home"
  export EC2_HOME="/usr/local/Cellar/ec2-api-tools/1.5.0.1/jars"
fi
if [ -d $HOME/.ec2 ]
then
  export EC2_PRIVATE_KEY="$(/bin/ls $HOME/.ec2/pk-*.pem)"
  export EC2_CERT="$(/bin/ls $HOME/.ec2/cert-*.pem)"
fi

alias glg="git log --pretty=format:'%Cred%h %Cblue%t%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad, %an)%Creset' --date=relative --graph"
alias gst='git status'
alias gc='git commit -v'
alias gco='git checkout'
alias ga='git add'
alias gap='git add -p'
alias gai='git add -i'
alias gp='git push'
alias gfa="git fetch --all --prune"
alias gstash="git -c commit.gpgsign=false stash"

alias fixshoved="~/.bin/poke -d shoved.githubapp.com:8080 -p aux1-ext.rs.github.com -i 127.0.0.23"
alias tmux-ps="~/.bin/tmux-ps"

alias turbo="ssh router script/turbo-me"
alias unturbo="ssh router script/unturbo-me"

# gh
alias zt="bin/testrb_or_zt"
alias zc="bin/zeus console"
alias zr="bin/zeus runner"
alias zrake="bin/zeus rake"

# important thing
alias dominion="open https://dominion.games"

function md {
  if [ -n "$1" ]
  then
    mkdir -p "$1" && \
    cd "$1" && \
    pwd
  fi
}

# Make git-svn work
export PERL5LIB=/opt/boxen/homebrew/Cellar/subversion17/1.7.13/Library/Perl/5.16

# Make `python -e "import mercurial"` work
#export PYTHONPATH=/opt/boxen/homebrew/Cellar/mercurial/2.8.2/lib/python2.7/site-packages

test -f ~/Dropbox/self/t.csv && export T_DATA_FILE=~/Dropbox/self/t.csv

# from https://code.visualstudio.com/docs/setup and http://stackoverflow.com/questions/29971053/how-to-open-visual-studio-code-from-the-command-line-on-osx
code () {
    if [[ $# = 0 ]]
    then
        open -a "Visual Studio Code"
    else
        [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}"
        open -a "Visual Studio Code" --args "$F"
    fi
}

## 2017-09-25 - not gonna shave this yak right now
##    * I don't have the passphrase for my secret key :/
##    * --write-env-file doesn't do anything, so i'm not sure if gpg-agent is working
##    * my linux vm has a different gpg-agent version :/
## # https://github.com/pstadler/keybase-gpg-github#optional-dont-ask-for-password-every-time
## if which gpg-agent >&/dev/null; then
##   if test -f ~/.gnupg/.gpg-agent-info -a -n "$(pgrep gpg-agent)"; then
##     source ~/.gnupg/.gpg-agent-info
##     export GPG_AGENT_INFO
##   else
##     eval $(gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info)
##   fi
## fi

# vim: ft=sh
