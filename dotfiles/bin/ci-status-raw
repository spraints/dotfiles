#!/bin/bash
#/ Usage: ci-status-raw [-v|--verbose] owner/repo [branch|commit]
#/ For a private repository, you'll need to set GITHUB_TOKEN before calling this.
#/ For example:
#/   GITHUB_TOKEN=xyz ci-status my-company/private-code feature123

set -e
set -o nounset

usage() {
  cat "$0" | grep ^#/ | cut -c4-
}

repo=
ref=

while [ $# -gt 0 ]; do
  case "$1" in
    -h|--help)
      usage
      exit 0 ;;
    -*)
      echo "Unrecognized option: $1"
      exit 1 ;;
    *)
      if [ -z "${repo}" ]; then
        repo="$1"
      else
        if [ -z "${ref}" ]; then
          ref="$1"
        else
          usage
          exit 1
        fi
      fi
      shift ;;
  esac
done

if [ -z "${repo}" ]; then
  usage
  exit 1
fi

if [ -z "${ref}" ]; then
  ref=master
fi

gql='
query ($owner: String!, $repo: String!, $ref: String!) {
  repository(owner: $owner, name: $repo) {
    object(expression: $ref) {
      ... on Commit {
        status {
          contexts {
            context
            state
            description
            targetUrl
            createdAt
          }
        }
        checkSuites(first: 100) {
          nodes {
            app { name }
            checkRuns(first: 100) {
              nodes {
                conclusion
                detailsUrl
                name
                permalink
                status
                summary
                title
              }
            }
          }
        }
      }
    }
  }
}
'
query="$(printf '{"query": "%s", "variables": {"owner": "%s", "repo": "%s", "ref": "%s"}}' \
  "$(echo "$gql" | tr '\n' ' ')"      \
  "$(echo "${repo}" | cut -d / -f 1)" \
  "$(echo "${repo}" | cut -d / -f 2)" \
  "$ref"
)"

curl_auth=
if [ -n "${GITHUB_TOKEN:-}" ]; then
  curl_auth=--user\ "${GITHUB_TOKEN}:x-oauth-basic"
fi

curl --silent \
     ${curl_auth} \
     -d "$query" \
     -H "Accept: application/vnd.github.antiope-preview+json" \
     https://api.github.com/graphql
