if [ -f /opt/github/env.sh ]
then
  source /opt/github/env.sh
fi

which rbenv >/dev/null 2>/dev/null &&
  eval "$(rbenv init -)"

which nodenv >/dev/null 2>/dev/null &&
  eval "$(nodenv init -)"

[[ -s "$HOME/.nvm/nvm.sh" ]] && source "$HOME/.nvm/nvm.sh"

[[ -s "$HOME/dev/na/na.sh" ]] && source "$HOME/dev/na/na.sh"

export PATH=/usr/local/bin:$PATH:/usr/local/sbin:${HOME}/.cabal/bin:${HOME}/dev/private/localbin

export RUBY_BUILD_DEFINITIONS=${HOME}/dev/puppet-ruby/files/definitions

export JAVA_MEM=-Xmx2g

export BCDATABASE_PATH=${HOME}/.nubic/db

export USE_CAPYBARA_WEBKIT=true
alias b='bundle exec'
alias slurp='git stash && git pull && git stash pop'

#export EDITOR=/usr/local/bin/mvim
export EDITOR=/usr/bin/vim
export GIT_EDITOR=/usr/bin/vim

# For AWS:
if [ -d /usr/local/Cellar/ec2-api-tools/1.5.0.1/jars ]
then
  export JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Home"
  export EC2_HOME="/usr/local/Cellar/ec2-api-tools/1.5.0.1/jars"
fi
if [ -d $HOME/.ec2 ]
then
  export EC2_PRIVATE_KEY="$(/bin/ls $HOME/.ec2/pk-*.pem)"
  export EC2_CERT="$(/bin/ls $HOME/.ec2/cert-*.pem)"
fi

alias glg="git log --pretty=format:'%Cred%h %Cblue%t%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr, %an)%Creset' --date=relative --graph"
alias gst='git status'
alias gc='git commit -v'
alias gco='git checkout'
alias ga='git add'
alias gap='git add -p'
alias gai='git add -i'
alias gp='git push'
alias gfa="git fetch --all --prune"

alias fixshoved="~/.bin/poke -d shoved.githubapp.com:8080 -p aux1-ext.rs.github.com -i 127.0.0.23"
alias tmux-ps="~/.bin/tmux-ps"

function md {
  if [ -n "$1" ]
  then
    mkdir -p "$1" && \
    cd "$1" && \
    pwd
  fi
}

# Make git-svn work
export PERL5LIB=/opt/boxen/homebrew/Cellar/subversion17/1.7.13/Library/Perl/5.16

test -f ~/Dropbox/self/t.csv && export T_DATA_FILE=~/Dropbox/self/t.csv

# https://github.com/pstadler/keybase-gpg-github#optional-dont-ask-for-password-every-time
if test -f ~/.gnupg/.gpg-agent-info -a -n "$(pgrep gpg-agent)"; then
  source ~/.gnupg/.gpg-agent-info
  export GPG_AGENT_INFO
else
  eval $(gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info)
fi

# vim: ft=sh
